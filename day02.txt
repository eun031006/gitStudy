git의 저장 방식
  임시저장(stage에 올림) -> 저장

stage에 변경사항을 올리는 방법(staged 상태로 만드는 방법)
  git add 파일이름

1. day02 폴더 : git repository
  day02.txt : 새로 만든 파일(untracked 상태)
                            (unstaged 상태)

2. git add day02.txt
  day02.txt : 추적 가능(tracked 상태)
              임시저장(staged 상태)
==============================================================
stage에 올려진 임시저장된 파일들만 영구저장(commit)된다.
(수정 -> add -> commit)

3. day02.txt 수정
  day02.txt : modified 상태(tracked 상태)
                          (unstaged 상태)

4. git add day02.txt
  day02.txt : 추적 가능(tracked 상태)
              임시저장(staged 상태)

5. git commit
  영구저장

  vi 에디터가 뜬다.
    i -> 메시지 입력 -> esc -> :wq
===============================================================
untracked
  새롭게 만든 파일은 untracked
tracked
  한번이라도 stage에 올라갔고, commit이 되었으면 staged

stage에 모든 파일 올리기
  git add .

commit 하면서 동시에 메시지를 작성하는 옵션
  -m
    git commit -m '메시지'

commit 하면서 add 하는 옵션
  -a
    git commit -a

    단, 파일이 tracked 상태일때만 가능
    ->untracked 상태라면(=새롭게 만들어진 파일이라면) 사용불가

두 가지 동시에 사용
  -am
    git commit -am '메시지'
===========================================
***파일 수정
  ->git add .
  ->git commit -m '메시지'
------------------------------------------------------------------------
브랜치
  기능별, 파일별로 수정사항을 저장할 수 있도록
  도와주는 장치

  브랜치를 만들면, 기본적으로 master(main) 브랜치가 만들어진다.

  -git repository에 존재하는 브랜치 목록 확인
    git branch
  -브랜치 만들기
    git branch '브랜치 이름'
  -다른 브랜치로 이동하기
    git checkout '이동할 브랜치 이름'
  -브랜치 병합하기
    현재 내가 위치한 브랜치에서 해당 브랜치를 병합한다.
    같은 줄 수정 : 충돌 발생=>직접 수정 후 add, commit 해준다.
    다른 줄 수정 : 이상 없음
  -브랜치 삭제
    git branch -d '브랜치 이름'
  -브랜치 이름 바꾸기
    git branch -m '바꿀 브랜치 이름'
-------------------------------------------------------------------------
git -> 로컬 repository
github -> 원격 repository

로컬 repository와 원격 repository를 연결
  git remote add origin(별명) (원격 저장소 주소)

원격 repository에 브랜치 업로드
  git push origin(별명) (브랜치 이름)
  
  -u 옵션
    로컬 repository 브랜치와 원격 repository 브랜치를 연결하는 옵션
    최초 1회 설정하면, 그 이후부터는 자동으로 연결된 원격 repository에 업로드된다.